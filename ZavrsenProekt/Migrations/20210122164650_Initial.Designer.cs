// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ZavrsenProekt.Data;

namespace ZavrsenProekt.Migrations
{
    [DbContext(typeof(ZavrsenProektContext))]
    [Migration("20210122164650_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("ZavrsenProekt.Models.Poseta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime?>("DatumPoseta")
                        .HasColumnType("datetime2");

                    b.Property<string>("Ime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Komentar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int>("TuristickiVodicId")
                        .HasColumnType("int");

                    b.Property<string>("Znamenitost")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("TuristickiVodicId");

                    b.ToTable("Poseta");
                });

            modelBuilder.Entity("ZavrsenProekt.Models.Turist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime?>("DatumPrijava")
                        .HasColumnType("datetime2");

                    b.Property<string>("Ime")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PassportId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prezime")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Turist");
                });

            modelBuilder.Entity("ZavrsenProekt.Models.TuristickiVodic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Ime")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Obrazovanie")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prezime")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("TuristickiVodic");
                });

            modelBuilder.Entity("ZavrsenProekt.Models.VkluciSe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("BrojKartica")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CVC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PosetaId")
                        .HasColumnType("int");

                    b.Property<string>("PosetaUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TouristId")
                        .HasColumnType("int");

                    b.Property<int?>("TuristId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ValidnostData")
                        .HasColumnType("datetime2");

                    b.Property<string>("ZnamenitostUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PosetaId");

                    b.HasIndex("TuristId");

                    b.ToTable("VkluciSe");
                });

            modelBuilder.Entity("ZavrsenProekt.Models.Poseta", b =>
                {
                    b.HasOne("ZavrsenProekt.Models.TuristickiVodic", "TuristickiVodic")
                        .WithMany("Poseta")
                        .HasForeignKey("TuristickiVodicId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TuristickiVodic");
                });

            modelBuilder.Entity("ZavrsenProekt.Models.VkluciSe", b =>
                {
                    b.HasOne("ZavrsenProekt.Models.Poseta", "Poseta")
                        .WithMany("Turisti")
                        .HasForeignKey("PosetaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZavrsenProekt.Models.Turist", "Turist")
                        .WithMany("Poseti")
                        .HasForeignKey("TuristId");

                    b.Navigation("Poseta");

                    b.Navigation("Turist");
                });

            modelBuilder.Entity("ZavrsenProekt.Models.Poseta", b =>
                {
                    b.Navigation("Turisti");
                });

            modelBuilder.Entity("ZavrsenProekt.Models.Turist", b =>
                {
                    b.Navigation("Poseti");
                });

            modelBuilder.Entity("ZavrsenProekt.Models.TuristickiVodic", b =>
                {
                    b.Navigation("Poseta");
                });
#pragma warning restore 612, 618
        }
    }
}
